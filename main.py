import streamlit as st
import pandas as pd

# Altere com o t칤tulo do seu projeto na parte indicada
st.title("Dashboard Final: Lista de pa칤ses por Popula칞칚o")

# Carrega CSV (assume que j치 foi gerado via `python scraper.py`)
# Se o seu CSV usar outro separador, ponto e v칤rgula, por exemplo
# basta alterar o par칙metro sep
df = pd.read_csv("dados/output.csv", sep=",")

# Renomeia a coluna para facilitar o uso no c칩digo
df.rename(columns={'Estimativa da ONU': 'Popula칞칚o'}, inplace=True)

# Continue a partir daqui com a implementa칞칚o do seu Dashboard

# Exibe dados brutos
st.subheader("游늵 Dados Originais")
st.dataframe(df)

# Limpeza: remove pontos, v칤rgulas, espa칞os e converte colunas para n칰mero se poss칤vel
for col in df.columns:
    df[col] = df[col].astype(str)\
                     .str.replace(".", "", regex=False)\
                     .str.replace(",", "", regex=False)\
                     .str.replace(" ", "", regex=False)
    df[col] = pd.to_numeric(df[col], errors='ignore')


# FILTROS NA SIDEBAR 

st.sidebar.header("Filtros")

# 1. text_input para buscar pa칤s por nome parcial
filtro_texto = st.sidebar.text_input("Buscar pa칤s (parte do nome):")

# 2. checkbox para filtrar s칩 pa칤ses com popula칞칚o > 100 milh칫es
filtro_pop_100mi = st.sidebar.checkbox("Mostrar s칩 pa칤ses com popula칞칚o > 100 milh칫es")

# 3. slider para filtrar intervalo de popula칞칚o
min_pop = int(df['Popula칞칚o'].min())
max_pop = int(df['Popula칞칚o'].max())
filtro_pop_slider = st.sidebar.slider(
    "Intervalo de popula칞칚o:",
    min_value=min_pop,
    max_value=max_pop,
    value=(min_pop, max_pop)
)

# Aplicar filtros
df_filtrado = df.copy()

if filtro_texto:
    df_filtrado = df_filtrado[df_filtrado['Pa칤s (ou territ칩rio dependente)'].str.contains(filtro_texto, case=False, na=False)]

if filtro_pop_100mi:
    df_filtrado = df_filtrado[df_filtrado['Popula칞칚o'] > 100_000_000]

df_filtrado = df_filtrado[
    (df_filtrado['Popula칞칚o'] >= filtro_pop_slider[0]) &
    (df_filtrado['Popula칞칚o'] <= filtro_pop_slider[1])
]

# Exibe dados filtrados
st.subheader(f"游늵 Dados Filtrados ({len(df_filtrado)} pa칤ses)")
st.dataframe(df_filtrado)

# Estat칤sticas
st.subheader("游늳 Estat칤sticas")
col1, col2, col3 = st.columns(3)
with col1:
    st.metric("Total de Pa칤ses", len(df_filtrado))
with col2:
    if 'Popula칞칚o' in df_filtrado.columns:
        st.metric("Popula칞칚o Total", f"{df_filtrado['Popula칞칚o'].sum():,.0f}".replace(",", "."))
with col3:
    if 'Popula칞칚o' in df_filtrado.columns:
        st.metric("Popula칞칚o M칠dia", f"{df_filtrado['Popula칞칚o'].mean():,.0f}".replace(",", "."))

# Gr치fico de barras com os 10 mais populosos do filtro
if 'Popula칞칚o' in df_filtrado.columns and 'Pa칤s (ou territ칩rio dependente)' in df_filtrado.columns:
    df_top = df_filtrado.sort_values(by="Popula칞칚o", ascending=False).head(10)
    st.subheader("游댛 Top 10 Pa칤ses por Popula칞칚o (Filtrado)")
    st.bar_chart(df_top.set_index("Pa칤s (ou territ칩rio dependente)")["Popula칞칚o"])
else:
    st.write("Nenhum pa칤s encontrado com os filtros aplicados.")
if 'Popula칞칚o' in df_filtrado.columns and 'Pa칤s (ou territ칩rio dependente)' in df_filtrado.columns:
    df_menores = df_filtrado.sort_values(by="Popula칞칚o", ascending=True).head(5)
    st.subheader("游댷 5 Pa칤ses Menos Populosos (Filtrado)")
    st.bar_chart(df_menores.set_index("Pa칤s (ou territ칩rio dependente)")["Popula칞칚o"])
    # Gr치fico de barras com os 5 menos populosos

